.. _quickref:

TPYBoard Micropython 添加自定义类库
======================================

版权声明：翻译整理属于TPYBoard，转载时请以超链接形式标明文章原始出处和作者信息及本声明

开始之前，首先要感谢一下TPYBoard技术交流群(157816561)-云之初晓网友的分享。


在micropython中保护Python脚本源代码除了生成mpy文件，还有一种更安全可靠的方法，就是将自己写的Python脚本编译到固件中，调用时只需要在外部import即可。
这样不仅可以实现源代码的保护，同时也介意

搭建micropython编译环境
-------------------------
1.安装arm-none-eabi-gcc交叉编译工具和gcc编译器。

  sudo apt-get install gcc-arm-none-eabi
  sudo apt-get install gcc

2.下载micropython源码包到本地，我下载到了home目录下。

  git clone --recursive https://github.com/micropython/micropython.git

MicroPython的源码结构
---------------------------

..image::/img/add-1.png

+--------------+---------------------------------------------+
| docs/        | micropython的说明文档(restructuredText)     |
+--------------+---------------------------------------------+
| drivers/     | 一些外接设备的实现例程(eg:ds18b20,nrf24l01) |
+--------------+---------------------------------------------+
| examples/    | micropython的使用例程                       |
+--------------+---------------------------------------------+
| extmod/      | C语言实现的模块                             |
+--------------+---------------------------------------------+
| lib/         | 各类芯片的lib文件                           |
+--------------+---------------------------------------------+
| mpy-cross/   | 自带的交叉编译器，可以将.py生成.mpy加密文件 |
+--------------+---------------------------------------------+
| ports/       | 移植到各类MCU上的源码(eg:stm32,esp8266)     |
+--------------+---------------------------------------------+
| tests/       | 测试框架和Python脚本                        |
+--------------+---------------------------------------------+
| tools/       | 工具                                        |
+--------------+---------------------------------------------+

进入ports目录下你会发现，micropython根据不同的MCU运行平台进行了分类，比如esp8266就是运行在esp8266-WIFI模块上的micropython，stm32是运行在stm32上的，还有cc3200等。

