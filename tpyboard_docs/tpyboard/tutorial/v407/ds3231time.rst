.. _TPYBoard_tutorial_18b20tem:

F407 Micropython控制DS3231读取时间、温度
=============================================

1.实验目的
--------------

   1. 学习在PC机系统中扩展简单I/O 接口的方法。
   2. 学习硬件接线方法。
   3. 学习F407Micropython开发板 I2C接口的用法。
   
2.所需元器件
-------------

   F407 Micropython开发板一块
   DS3231时钟模块一个
   数据线一条
   杜邦线若干
   Putty调试工具
 
3.DS3231的接线方法
-------------------------

  DS3231时钟模块，通信用的是IIC接口在这只用到DS3231时钟模块的SCL,SDA,VCC,GND四个针脚即可设定读出时间和温度，下面是接线方法。

.. image:: http://old.tpyboard.com/document/documents/tb407/3231time_1.png

F407 Micropython开发板和DS3231时钟模块的针脚对应关系如下：
IIC接口1的接线方法（程序中ds=DS3231(1)调用iic接口1）

+------------------------+----------------+
| F407 Micropython开发板 | DS3231时钟模块 |
+========================+================+
|    Y6                  |  SCL           |
+------------------------+----------------+
|    Y5                  |  SDA           |
+------------------------+----------------+
|    3V3                 |  VCC           |
+------------------------+----------------+
|    GND                 |  GND           |
+------------------------+----------------+

IIC接口2的接线方法（程序中ds=DS3231(2)调用iic接口2）

+------------------------+----------------+
| F407 Micropython开发板 | DS3231时钟模块 |
+========================+================+
|   X32                  |  SCL           |
+------------------------+----------------+
|   X33                  |  SDA           |
+------------------------+----------------+
|   3V3                  |  VCC           |
+------------------------+----------------+
|   GND                  |  GND           |
+------------------------+----------------+

              
4.源代码
---------------

   接线ok后，导入DS3231.py，编写main.py保存，等红灯熄灭后，rst开发板，用Putty可以看到时间和温度。

 
.. code-block:: python
	# main.py -- put your code here!
	import pyb
	from DS3231 import DS3231  
	ds=DS3231(1)
	#设置时间
	#ds.TIME([17,40,30])

	#读取秒
	ds.sec()
	print(ds.sec())
	#读取时间
	ds.TIME()
	print(ds.TIME())
	#读取日期
	ds.DATE()
	print(ds.DATE())
	#读取温度
	ds.TEMP()
	print(ds.TEMP())


* `下载源码 <http://old.tpyboard.com/document/documents/tb407/ds3231.rar>`_ 